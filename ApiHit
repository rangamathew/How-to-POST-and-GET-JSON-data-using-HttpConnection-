import android.app.Activity;
import android.os.AsyncTask;
import android.util.Log;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

/**
 * Created by android on 13/1/18.
 */

public class ApiHit
{
    StringBuilder stringBuilder = new StringBuilder();
    String Url,Type="";
    JSONObject jsonObject;
    DataOutputStream printout;
    Activity activity;
    ApiResponse apiResponse;

    public ApiHit(Activity activity,String Url,String type,ApiResponse apiResponse)
    {

        this.activity=activity;
        this.Url=Url;
        this.activity=activity;
        this.Type=type;
        this.apiResponse=apiResponse;
        new ApiListener().execute();
    }

    public ApiHit(Activity activity,String Url,String type,JSONObject jsonObject,ApiResponse apiResponse)
    {
        this.activity=activity;
        this.Url=Url;
        this.jsonObject=jsonObject;
        this.activity=activity;
        this.Type=type;
        this.apiResponse=apiResponse;
        new ApiListener().execute();
    }



    public class ApiListener extends AsyncTask<String,String,String>
    {



        @Override
        protected String doInBackground(String... params)
        {
            try {
                //Log.e("Inside","Do in Background");
                URL url = new URL(Url);
                //Log.e("URL",Url);
                HttpURLConnection htp = (HttpURLConnection) url.openConnection();
                if(Type.equalsIgnoreCase("GET"))
                {
                    Log.e("Get","Get");
                    Log.e("URL",Url);
                    htp.setRequestMethod("GET");
                    htp.setRequestProperty("Content-Type", "application/json");
                    htp.setDoInput(true);
                    htp.setUseCaches(false);
                    htp.connect();
                }
                else
                {
                    Log.e("Post","Post");
                    Log.e("URL",Url);
                    Log.e("Params",jsonObject.toString());
                    htp.setRequestMethod("POST");
                    htp.setRequestProperty("Content-Type", "application/json");
                    htp.setDoInput(true);
                    htp.setDoOutput(true);
                    htp.setUseCaches(false);
                    htp.connect();
                    printout = new DataOutputStream(htp.getOutputStream());
                    printout.writeBytes(jsonObject.toString());
                    printout.flush();
                    printout.close();
                }
                InputStream inputStream = htp.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
                String Line;
                while ((Line = bufferedReader.readLine()) != null) {
                    stringBuilder.append(Line);
                }
                return stringBuilder.toString();
            } catch (Exception e) {
                Log.e("Error",e.getMessage());
            }
            return "null";
        }

        @Override
        protected void onPostExecute(String s)
        {
            //Log.e("Response",s);
            apiResponse.onApiResponse(s);
        }
    }

}
